// console.log("yes");

const express = require('express');
const bodyParser = require('body-parser');
const db = require('./db.config');
// const path = require("path");
const app = express();
const csrf = require('csurf');
const cookieParser = require('cookie-parser');

const port = process.env.PORT || 5000;

//create table if not exits
// db.sequelize.sync();


const controller = require('./customer.controller');


app.use(bodyParser.json())


// After setting up your Express app instance
app.use(cookieParser());

// Add the CSRF middleware after cookie parsing
app.use(csrf({ cookie: true }));



app.use((req, res, next) => {
  res.locals.csrfToken = req.csrfToken();
  next();
});


app.post('/your-action-route', (req, res) => {
  const submittedCSRFToken = req.body._csrf; // CSRF token from the form
  const csrfToken = req.csrfToken(); // CSRF token generated by csurf middleware

  if (submittedCSRFToken !== csrfToken) {
    // Handle invalid CSRF token (e.g., throw an error, redirect, or show an error page)
  }

  // Continue with your logic for handling the request
});




// require('./book.model');
// require('./models/index');

// require('./login');

app.get('/', function (req, res) {
  res.send("Welocme to user!");
});
// app.listen(8000);

//create a new customer
app.post('/customers/new', function (req, res) {
  controller.createCustomer(req, res);
})



//Find All customer
app.get('/customers', function (req, res) {
  controller.findAllCustomer(req, res);
})


//Find By Id customer
app.get('/customers/:id', function (req, res) {
  controller.findCustomerByid(req, res);
})


//Find By Id customer
app.put('/customers/update', function (req, res) {
  controller.UpdateCustomer(req, res);
})


//Find By Id customer
app.delete('/customers/delete/:id', function (req, res) {
  controller.deleteCustomer(req, res);
})





app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});